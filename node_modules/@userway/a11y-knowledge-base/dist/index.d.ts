declare enum Level {
    A = "A",
    AA = "AA",
    AAA = "AAA",
    BESTPRACTICE = "BESTPRACTICE",
    EXPERIMENTAL = "EXPERIMENTAL"
}
type SeverityScore = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;
declare enum Severity {
    MINOR = "MINOR",
    MODERATE = "MODERATE",
    SERIOUS = "SERIOUS",
    CRITICAL = "CRITICAL"
}
declare enum CSR {
    YES = "YES",
    PARTIAL = "PARTIAL",
    'N/A' = "N/A",
    NODATA = "NODATA"
}
declare enum WidgetCoverage {
    YES = "YES",
    PARTIAL = "PARTIAL",
    NODATA = "NODATA",
    'N/A' = "NA"
}
declare enum DisabilitiesAffected {
    BLIND = "BLIND",
    COGNITIVE = "COGNITIVE",
    COLOR_BLINDNESS = "COLOR_BLINDNESS",
    DEAF = "DEAF",
    DEAF_BLINDNESS = "DEAF_BLINDNESS",
    LOW_VISION = "LOW_VISION",
    MOBILITY = "MOBILITY",
    ATTENTION_DEFICIT = "ATTENTION_DEFICIT",
    AUTISM = "AUTISM",
    DEAF_BLIND = "DEAF_BLIND",
    DYSLEXIA = "DYSLEXIA",
    KEYBOARD_USERS = "KEYBOARD_USERS",
    KEYBOARD = "KEYBOARD",
    NODATA = "NODATA"
}
declare enum Areas {
    SCREEN_READER = "SCREEN_READER",
    KEYBOARD_NAV = "KEYBOARD_NAV",
    SWITCH = "SWITCH",
    VISUAL = "VISUAL",
    VOICE_CONTROL = "VOICE_CONTROL",
    KEYBOARD = "KEYBOARD",
    NODATA = "NODATA"
}
type RuleDescriptor = {
    description: string;
    display: string;
    errorMessage: string;
    id: number;
    level: Level;
    key: string;
    references: Array<{
        label: string;
        url: string;
    }>;
    recommendation: string;
    severity: Severity;
    csr?: CSR;
    widgetCoverage?: WidgetCoverage;
    disabilitiesAffected: Array<keyof typeof DisabilitiesAffected>;
    areas: Array<keyof typeof Areas>;
};

declare const imageAlt: RuleDescriptor;
declare const imageRedundantAlt: RuleDescriptor;
declare const imageSameAlt: RuleDescriptor;
declare const imageAltLong: RuleDescriptor;
declare const areaAlt: RuleDescriptor;
declare const inputImageAlt: RuleDescriptor;
declare const imageAltSuspicious: RuleDescriptor;
declare const tableDuplicateName: RuleDescriptor;
declare const emptyTableHeader: RuleDescriptor;
declare const fieldsetLegend: RuleDescriptor;
declare const list: RuleDescriptor;
declare const listitem: RuleDescriptor;
declare const ariaValidAttrValue: RuleDescriptor;
declare const customFocusableElements: RuleDescriptor;
declare const metaRefresh: RuleDescriptor;
declare const marquee: RuleDescriptor;
declare const frameTitle: RuleDescriptor;
declare const frameTitleUnique: RuleDescriptor;
declare const documentTitle: RuleDescriptor;
declare const tabindex: RuleDescriptor;
declare const linkName: RuleDescriptor;
declare const linkReferToImage: RuleDescriptor;
declare const imageLinkWithoutText: RuleDescriptor;
declare const identicalLinksSamePurpose: RuleDescriptor;
declare const pageHasHeadingOne: RuleDescriptor;
declare const emptyHeading: RuleDescriptor;
declare const headingOrder: RuleDescriptor;
declare const labelTitleOnly: RuleDescriptor;
declare const inputButtonName: RuleDescriptor;
declare const buttonName: RuleDescriptor;
declare const htmlLang: RuleDescriptor;
declare const htmlLangValid: RuleDescriptor;
declare const htmlXmlLangMismatch: RuleDescriptor;
declare const validLang: RuleDescriptor;
declare const duplicateId: RuleDescriptor;
declare const accesskeys: RuleDescriptor;
declare const colorContrast: RuleDescriptor;
declare const linkNoMentionTargetBlank: RuleDescriptor;
declare const invalidId: RuleDescriptor;
declare const linkAmbiguousText: RuleDescriptor;
declare const skipLink: RuleDescriptor;
declare const ariaHiddenBody: RuleDescriptor;
declare const ariaHiddenFocus: RuleDescriptor;
declare const noAutoplayAudio: RuleDescriptor;
declare const blink: RuleDescriptor;
declare const metaViewport: RuleDescriptor;
declare const labelContentNameMismatch: RuleDescriptor;
declare const ariaInputFieldName: RuleDescriptor;
declare const ariaMeterName: RuleDescriptor;
declare const ariaProgressbarName: RuleDescriptor;
declare const ariaRequiredAttr: RuleDescriptor;
declare const ariaRequiredChildren: RuleDescriptor;
declare const ariaRequiredParent: RuleDescriptor;
declare const ariaRoledescription: RuleDescriptor;
declare const ariaRoles: RuleDescriptor;
declare const ariaText: RuleDescriptor;
declare const ariaToggleFieldName: RuleDescriptor;
declare const ariaTooltipName: RuleDescriptor;
declare const ariaTreeitemName: RuleDescriptor;
declare const ariaValidAttr: RuleDescriptor;
declare const audioCaption: RuleDescriptor;
declare const autocompleteValid: RuleDescriptor;
declare const avoidInlineSpacing: RuleDescriptor;
declare const bypass: RuleDescriptor;
declare const colorContrastEnhanced: RuleDescriptor;
declare const cssOrientationLock: RuleDescriptor;
declare const definitionList: RuleDescriptor;
declare const dlitem: RuleDescriptor;
declare const duplicateIdActive: RuleDescriptor;
declare const duplicateIdAria: RuleDescriptor;
declare const focusOrderSemantics: RuleDescriptor;
declare const formFieldMultipleLabels: RuleDescriptor;
declare const frameFocusableContent: RuleDescriptor;
declare const hiddenContent: RuleDescriptor;
declare const label: RuleDescriptor;
declare const landmarkBannerIsTopLevel: RuleDescriptor;
declare const landmarkComplementaryIsTopLevel: RuleDescriptor;
declare const landmarkContentinfoIsTopLevel: RuleDescriptor;
declare const landmarkMainIsTopLevel: RuleDescriptor;
declare const landmarkNoDuplicateBanner: RuleDescriptor;
declare const landmarkNoDuplicateContentinfo: RuleDescriptor;
declare const landmarkNoDuplicateMain: RuleDescriptor;
declare const landmarkOneMain: RuleDescriptor;
declare const landmarkUnique: RuleDescriptor;
declare const linkInTextBlock: RuleDescriptor;
declare const metaRefreshNoExceptions: RuleDescriptor;
declare const metaViewportLarge: RuleDescriptor;
declare const objectAlt: RuleDescriptor;
declare const pAsHeading: RuleDescriptor;
declare const presentationRoleConflict: RuleDescriptor;
declare const region: RuleDescriptor;
declare const roleImgAlt: RuleDescriptor;
declare const scopeAttrValid: RuleDescriptor;
declare const scrollableRegionFocusable: RuleDescriptor;
declare const selectName: RuleDescriptor;
declare const serverSideImageMap: RuleDescriptor;
declare const svgImgAlt: RuleDescriptor;
declare const tableFakeCaption: RuleDescriptor;
declare const targetSize: RuleDescriptor;
declare const tdHasHeader: RuleDescriptor;
declare const tdHeadersAttr: RuleDescriptor;
declare const thHasDataCells: RuleDescriptor;
declare const videoCaption: RuleDescriptor;
declare const nestedInteractive: RuleDescriptor;
declare const bold: RuleDescriptor;
declare const noAutoplayAudioNoExceptions: RuleDescriptor;
declare const ariaAllowedAttr: RuleDescriptor;
declare const ariaAllowedRole: RuleDescriptor;
declare const ariaCommandName: RuleDescriptor;
declare const ariaDialogName: RuleDescriptor;
declare const italic: RuleDescriptor;
declare const bypassHeading: RuleDescriptor;
declare const bypassLandmark: RuleDescriptor;
declare const bypassMoveFocus: RuleDescriptor;
declare const avoidInlineLineHeight: RuleDescriptor;

declare const registry_accesskeys: typeof accesskeys;
declare const registry_areaAlt: typeof areaAlt;
declare const registry_ariaAllowedAttr: typeof ariaAllowedAttr;
declare const registry_ariaAllowedRole: typeof ariaAllowedRole;
declare const registry_ariaCommandName: typeof ariaCommandName;
declare const registry_ariaDialogName: typeof ariaDialogName;
declare const registry_ariaHiddenBody: typeof ariaHiddenBody;
declare const registry_ariaHiddenFocus: typeof ariaHiddenFocus;
declare const registry_ariaInputFieldName: typeof ariaInputFieldName;
declare const registry_ariaMeterName: typeof ariaMeterName;
declare const registry_ariaProgressbarName: typeof ariaProgressbarName;
declare const registry_ariaRequiredAttr: typeof ariaRequiredAttr;
declare const registry_ariaRequiredChildren: typeof ariaRequiredChildren;
declare const registry_ariaRequiredParent: typeof ariaRequiredParent;
declare const registry_ariaRoledescription: typeof ariaRoledescription;
declare const registry_ariaRoles: typeof ariaRoles;
declare const registry_ariaText: typeof ariaText;
declare const registry_ariaToggleFieldName: typeof ariaToggleFieldName;
declare const registry_ariaTooltipName: typeof ariaTooltipName;
declare const registry_ariaTreeitemName: typeof ariaTreeitemName;
declare const registry_ariaValidAttr: typeof ariaValidAttr;
declare const registry_ariaValidAttrValue: typeof ariaValidAttrValue;
declare const registry_audioCaption: typeof audioCaption;
declare const registry_autocompleteValid: typeof autocompleteValid;
declare const registry_avoidInlineLineHeight: typeof avoidInlineLineHeight;
declare const registry_avoidInlineSpacing: typeof avoidInlineSpacing;
declare const registry_blink: typeof blink;
declare const registry_bold: typeof bold;
declare const registry_buttonName: typeof buttonName;
declare const registry_bypass: typeof bypass;
declare const registry_bypassHeading: typeof bypassHeading;
declare const registry_bypassLandmark: typeof bypassLandmark;
declare const registry_bypassMoveFocus: typeof bypassMoveFocus;
declare const registry_colorContrast: typeof colorContrast;
declare const registry_colorContrastEnhanced: typeof colorContrastEnhanced;
declare const registry_cssOrientationLock: typeof cssOrientationLock;
declare const registry_customFocusableElements: typeof customFocusableElements;
declare const registry_definitionList: typeof definitionList;
declare const registry_dlitem: typeof dlitem;
declare const registry_documentTitle: typeof documentTitle;
declare const registry_duplicateId: typeof duplicateId;
declare const registry_duplicateIdActive: typeof duplicateIdActive;
declare const registry_duplicateIdAria: typeof duplicateIdAria;
declare const registry_emptyHeading: typeof emptyHeading;
declare const registry_emptyTableHeader: typeof emptyTableHeader;
declare const registry_fieldsetLegend: typeof fieldsetLegend;
declare const registry_focusOrderSemantics: typeof focusOrderSemantics;
declare const registry_formFieldMultipleLabels: typeof formFieldMultipleLabels;
declare const registry_frameFocusableContent: typeof frameFocusableContent;
declare const registry_frameTitle: typeof frameTitle;
declare const registry_frameTitleUnique: typeof frameTitleUnique;
declare const registry_headingOrder: typeof headingOrder;
declare const registry_hiddenContent: typeof hiddenContent;
declare const registry_htmlLang: typeof htmlLang;
declare const registry_htmlLangValid: typeof htmlLangValid;
declare const registry_htmlXmlLangMismatch: typeof htmlXmlLangMismatch;
declare const registry_identicalLinksSamePurpose: typeof identicalLinksSamePurpose;
declare const registry_imageAlt: typeof imageAlt;
declare const registry_imageAltLong: typeof imageAltLong;
declare const registry_imageAltSuspicious: typeof imageAltSuspicious;
declare const registry_imageLinkWithoutText: typeof imageLinkWithoutText;
declare const registry_imageRedundantAlt: typeof imageRedundantAlt;
declare const registry_imageSameAlt: typeof imageSameAlt;
declare const registry_inputButtonName: typeof inputButtonName;
declare const registry_inputImageAlt: typeof inputImageAlt;
declare const registry_invalidId: typeof invalidId;
declare const registry_italic: typeof italic;
declare const registry_label: typeof label;
declare const registry_labelContentNameMismatch: typeof labelContentNameMismatch;
declare const registry_labelTitleOnly: typeof labelTitleOnly;
declare const registry_landmarkBannerIsTopLevel: typeof landmarkBannerIsTopLevel;
declare const registry_landmarkComplementaryIsTopLevel: typeof landmarkComplementaryIsTopLevel;
declare const registry_landmarkContentinfoIsTopLevel: typeof landmarkContentinfoIsTopLevel;
declare const registry_landmarkMainIsTopLevel: typeof landmarkMainIsTopLevel;
declare const registry_landmarkNoDuplicateBanner: typeof landmarkNoDuplicateBanner;
declare const registry_landmarkNoDuplicateContentinfo: typeof landmarkNoDuplicateContentinfo;
declare const registry_landmarkNoDuplicateMain: typeof landmarkNoDuplicateMain;
declare const registry_landmarkOneMain: typeof landmarkOneMain;
declare const registry_landmarkUnique: typeof landmarkUnique;
declare const registry_linkAmbiguousText: typeof linkAmbiguousText;
declare const registry_linkInTextBlock: typeof linkInTextBlock;
declare const registry_linkName: typeof linkName;
declare const registry_linkNoMentionTargetBlank: typeof linkNoMentionTargetBlank;
declare const registry_linkReferToImage: typeof linkReferToImage;
declare const registry_list: typeof list;
declare const registry_listitem: typeof listitem;
declare const registry_marquee: typeof marquee;
declare const registry_metaRefresh: typeof metaRefresh;
declare const registry_metaRefreshNoExceptions: typeof metaRefreshNoExceptions;
declare const registry_metaViewport: typeof metaViewport;
declare const registry_metaViewportLarge: typeof metaViewportLarge;
declare const registry_nestedInteractive: typeof nestedInteractive;
declare const registry_noAutoplayAudio: typeof noAutoplayAudio;
declare const registry_noAutoplayAudioNoExceptions: typeof noAutoplayAudioNoExceptions;
declare const registry_objectAlt: typeof objectAlt;
declare const registry_pAsHeading: typeof pAsHeading;
declare const registry_pageHasHeadingOne: typeof pageHasHeadingOne;
declare const registry_presentationRoleConflict: typeof presentationRoleConflict;
declare const registry_region: typeof region;
declare const registry_roleImgAlt: typeof roleImgAlt;
declare const registry_scopeAttrValid: typeof scopeAttrValid;
declare const registry_scrollableRegionFocusable: typeof scrollableRegionFocusable;
declare const registry_selectName: typeof selectName;
declare const registry_serverSideImageMap: typeof serverSideImageMap;
declare const registry_skipLink: typeof skipLink;
declare const registry_svgImgAlt: typeof svgImgAlt;
declare const registry_tabindex: typeof tabindex;
declare const registry_tableDuplicateName: typeof tableDuplicateName;
declare const registry_tableFakeCaption: typeof tableFakeCaption;
declare const registry_targetSize: typeof targetSize;
declare const registry_tdHasHeader: typeof tdHasHeader;
declare const registry_tdHeadersAttr: typeof tdHeadersAttr;
declare const registry_thHasDataCells: typeof thHasDataCells;
declare const registry_validLang: typeof validLang;
declare const registry_videoCaption: typeof videoCaption;
declare namespace registry {
  export {
    registry_accesskeys as accesskeys,
    registry_areaAlt as areaAlt,
    registry_ariaAllowedAttr as ariaAllowedAttr,
    registry_ariaAllowedRole as ariaAllowedRole,
    registry_ariaCommandName as ariaCommandName,
    registry_ariaDialogName as ariaDialogName,
    registry_ariaHiddenBody as ariaHiddenBody,
    registry_ariaHiddenFocus as ariaHiddenFocus,
    registry_ariaInputFieldName as ariaInputFieldName,
    registry_ariaMeterName as ariaMeterName,
    registry_ariaProgressbarName as ariaProgressbarName,
    registry_ariaRequiredAttr as ariaRequiredAttr,
    registry_ariaRequiredChildren as ariaRequiredChildren,
    registry_ariaRequiredParent as ariaRequiredParent,
    registry_ariaRoledescription as ariaRoledescription,
    registry_ariaRoles as ariaRoles,
    registry_ariaText as ariaText,
    registry_ariaToggleFieldName as ariaToggleFieldName,
    registry_ariaTooltipName as ariaTooltipName,
    registry_ariaTreeitemName as ariaTreeitemName,
    registry_ariaValidAttr as ariaValidAttr,
    registry_ariaValidAttrValue as ariaValidAttrValue,
    registry_audioCaption as audioCaption,
    registry_autocompleteValid as autocompleteValid,
    registry_avoidInlineLineHeight as avoidInlineLineHeight,
    registry_avoidInlineSpacing as avoidInlineSpacing,
    registry_blink as blink,
    registry_bold as bold,
    registry_buttonName as buttonName,
    registry_bypass as bypass,
    registry_bypassHeading as bypassHeading,
    registry_bypassLandmark as bypassLandmark,
    registry_bypassMoveFocus as bypassMoveFocus,
    registry_colorContrast as colorContrast,
    registry_colorContrastEnhanced as colorContrastEnhanced,
    registry_cssOrientationLock as cssOrientationLock,
    registry_customFocusableElements as customFocusableElements,
    registry_definitionList as definitionList,
    registry_dlitem as dlitem,
    registry_documentTitle as documentTitle,
    registry_duplicateId as duplicateId,
    registry_duplicateIdActive as duplicateIdActive,
    registry_duplicateIdAria as duplicateIdAria,
    registry_emptyHeading as emptyHeading,
    registry_emptyTableHeader as emptyTableHeader,
    registry_fieldsetLegend as fieldsetLegend,
    registry_focusOrderSemantics as focusOrderSemantics,
    registry_formFieldMultipleLabels as formFieldMultipleLabels,
    registry_frameFocusableContent as frameFocusableContent,
    registry_frameTitle as frameTitle,
    registry_frameTitleUnique as frameTitleUnique,
    registry_headingOrder as headingOrder,
    registry_hiddenContent as hiddenContent,
    registry_htmlLang as htmlLang,
    registry_htmlLangValid as htmlLangValid,
    registry_htmlXmlLangMismatch as htmlXmlLangMismatch,
    registry_identicalLinksSamePurpose as identicalLinksSamePurpose,
    registry_imageAlt as imageAlt,
    registry_imageAltLong as imageAltLong,
    registry_imageAltSuspicious as imageAltSuspicious,
    registry_imageLinkWithoutText as imageLinkWithoutText,
    registry_imageRedundantAlt as imageRedundantAlt,
    registry_imageSameAlt as imageSameAlt,
    registry_inputButtonName as inputButtonName,
    registry_inputImageAlt as inputImageAlt,
    registry_invalidId as invalidId,
    registry_italic as italic,
    registry_label as label,
    registry_labelContentNameMismatch as labelContentNameMismatch,
    registry_labelTitleOnly as labelTitleOnly,
    registry_landmarkBannerIsTopLevel as landmarkBannerIsTopLevel,
    registry_landmarkComplementaryIsTopLevel as landmarkComplementaryIsTopLevel,
    registry_landmarkContentinfoIsTopLevel as landmarkContentinfoIsTopLevel,
    registry_landmarkMainIsTopLevel as landmarkMainIsTopLevel,
    registry_landmarkNoDuplicateBanner as landmarkNoDuplicateBanner,
    registry_landmarkNoDuplicateContentinfo as landmarkNoDuplicateContentinfo,
    registry_landmarkNoDuplicateMain as landmarkNoDuplicateMain,
    registry_landmarkOneMain as landmarkOneMain,
    registry_landmarkUnique as landmarkUnique,
    registry_linkAmbiguousText as linkAmbiguousText,
    registry_linkInTextBlock as linkInTextBlock,
    registry_linkName as linkName,
    registry_linkNoMentionTargetBlank as linkNoMentionTargetBlank,
    registry_linkReferToImage as linkReferToImage,
    registry_list as list,
    registry_listitem as listitem,
    registry_marquee as marquee,
    registry_metaRefresh as metaRefresh,
    registry_metaRefreshNoExceptions as metaRefreshNoExceptions,
    registry_metaViewport as metaViewport,
    registry_metaViewportLarge as metaViewportLarge,
    registry_nestedInteractive as nestedInteractive,
    registry_noAutoplayAudio as noAutoplayAudio,
    registry_noAutoplayAudioNoExceptions as noAutoplayAudioNoExceptions,
    registry_objectAlt as objectAlt,
    registry_pAsHeading as pAsHeading,
    registry_pageHasHeadingOne as pageHasHeadingOne,
    registry_presentationRoleConflict as presentationRoleConflict,
    registry_region as region,
    registry_roleImgAlt as roleImgAlt,
    registry_scopeAttrValid as scopeAttrValid,
    registry_scrollableRegionFocusable as scrollableRegionFocusable,
    registry_selectName as selectName,
    registry_serverSideImageMap as serverSideImageMap,
    registry_skipLink as skipLink,
    registry_svgImgAlt as svgImgAlt,
    registry_tabindex as tabindex,
    registry_tableDuplicateName as tableDuplicateName,
    registry_tableFakeCaption as tableFakeCaption,
    registry_targetSize as targetSize,
    registry_tdHasHeader as tdHasHeader,
    registry_tdHeadersAttr as tdHeadersAttr,
    registry_thHasDataCells as thHasDataCells,
    registry_validLang as validLang,
    registry_videoCaption as videoCaption,
  };
}

export { Areas, CSR, DisabilitiesAffected, Level, RuleDescriptor, Severity, SeverityScore, WidgetCoverage, registry };
